import parseiter.*;
import vmdparse.*;
import vmdsitegen.*;
import stdlib.*;
import stdlib.collections.hashmap.*;
import stdlib.collections.hashset.*;
import stdlib.collections.list.*;
import stdlib.path.*;
import stdlib.flagger.*;
import stdlib.stringutils.*;
import stdlib.command.*;

// func doThing() int extern;

exported func main() {
  if (numMainArgs() < 2) {
    println("Usage: " + getMainArg(0) + " [build|testvale]");
    return void();
  }

  all_args_list = List<str>();
  i = 0;
  while (i < numMainArgs()) {
    all_args_list.add(getMainArg(i));
    set i = i + 1;
  }
  all_args = all_args_list.toImmArray();

  flags =
      [#][
        Flag(
          "--compiler_dir",
          FLAG_STR(),
          "Vale compiler directory.",
          "~/Downloads/ValeCompiler",
          "The path to the directory containing the Vale compiler. Used for syntax highlighting and testing vale code snippets."),
        Flag(
          "--out",
          FLAG_STR(),
          "blork.",
          "bork",
          "mork mork mork")];

  parsed_flags = parse_all_flags(&flags, all_args);

  if (parsed_flags.unrecognized_inputs.len() < 1) {
    panic("Must specify a command (build or testvale).");
  }

  if (parsed_flags.unrecognized_inputs.get(0) == "build") {
    frontendPath = expect_string_flag(&parsed_flags, &flags, "--compiler_dir");
    outFilepath = expect_string_flag(&parsed_flags, &flags, "--out");

    if (parsed_flags.unrecognized_inputs.len() < 2) {
      panic("Must specify an input filename.");
    }
    inFilepath = parsed_flags.unrecognized_inputs.get(1);

    page = parse(inFilepath);

    output = Output();
    tocRootList = makeTocRootList(&page);
    printPage(&output, frontendPath, &page, &tocRootList);

    writeStringToFile(outFilepath, output.assembleStr());
  } else if (parsed_flags.unrecognized_inputs.get(0) == "testvale") {
    frontendPath = expect_string_flag(&parsed_flags, &flags, "--compiler_dir");

    if (parsed_flags.unrecognized_inputs.len() < 2) {
      panic("Must specify an input filename.");
    }
    inFilepath = parsed_flags.unrecognized_inputs.get(1);


    // println("doing testvale");

    page = parse(inFilepath);

    testPage(frontendPath, &page);
  } else {
    println("Unknown mode: " + getMainArg(0));
  }
}
